{-# OPTIONS --without-K #-}

module Groupoid.Monoidal where

open import Agda.Primitive
module G where
  open import Groupoid public
    hiding (module ╬а)
  module ╬а where
    open Groupoid.╬а public
    open import Groupoid.Bifunctor public
import Setoid as S
open import Type as T
  using (_,_)

record t {d} ..{РёЊрхњ РёЊ╦брхњ РёЊ╦б╩░}
  (A : G.t d РёЊрхњ РёЊ╦брхњ РёЊ╦б╩░)
    : Set (РёЊрхњ Ріћ РёЊ╦брхњ Ріћ РёЊ╦б╩░) where
  no-eta-equality
  open G

  field
    РіЌ : ╬а.:РЪе A , A РЪЕРЄњРѓђрхЌ A
    ­ЮЪЎ : obj A

  _РіЌРѓђ_
    : (aРѓђ aРѓЂ : obj A) Рєњ obj A
  _РіЌРѓђ_ = ╬╗ aРѓђ aРѓЂ Рєњ РіЌ ╬а.$Рѓђ (aРѓђ , aРѓЂ)

  _РіЌРѓЂ_
    : Рѕђ {aРѓђ aРѓЂ aРѓѓ aРѓЃ}
    Рєњ (fРѓђ : homРѓђ A aРѓђ aРѓЂ)
    Рєњ (fРѓЂ : homРѓђ A aРѓѓ aРѓЃ)
    Рєњ homРѓђ A (aРѓђ РіЌРѓђ aРѓѓ) (aРѓЂ РіЌРѓђ aРѓЃ)
  _РіЌРѓЂ_ = ╬╗ fРѓђ fРѓЂ Рєњ РіЌ ╬а.$РѓЂ (fРѓђ , fРѓЂ)

  _РіЌРѓѓ_
    : Рѕђ {aРѓђ aРѓЂ aРѓѓ aРѓЃ}
    Рєњ {fРѓђ gРѓђ : homРѓђ A aРѓђ aРѓЂ}
    Рєњ {fРѓЂ gРѓЂ : homРѓђ A aРѓѓ aРѓЃ}
    Рєњ (pРѓђ : homРѓЂ A fРѓђ gРѓђ)
    Рєњ (pРѓЂ : homРѓЂ A fРѓЂ gРѓЂ)
    Рєњ homРѓЂ A (fРѓђ РіЌРѓЂ fРѓЂ) (gРѓђ РіЌРѓЂ gРѓЂ)
  _РіЌРѓѓ_ = ╬╗ pРѓђ pРѓЂ Рєњ РіЌ ╬а.$Рѓѓ (pРѓђ , pРѓЂ)

  field
    кЏ
      : Рѕљ.РЪе ╬а.!рхЇ ­ЮЪЎ [ РіЌ ],Рѓђ - РЪЕ
      TF.РЄћРѓЂ ------------------ РЅЁРѓЂ
        -
    ¤Ђ
      : Рѕљ.РЪе - [ РіЌ ],Рѓђ ╬а.!рхЇ ­ЮЪЎ РЪЕ
      TF.РЄћРѓЂ ------------------ РЅЁРѓЂ
        -
    ╬▒
      : Рѕљ.РЪе РіЌ [ РіЌ ]РіЌРѓђ - РЪЕ
      TF.РЄћРѓЂ ------------- РЅЁРѓЂ
        Рѕљ.РЪе - [ РіЌ ]РіЌРѓђ РіЌ РЪЕ
        ╬а.РѕўРѓђрхЌ Рѕљ.╬▒

  field
    .tri
      : Рѕђ {a b} Рєњ homРѓЂ A
        Ріб A [ idnРѓђ A РіЌРѓЂ TF.РѓЂРЄњ кЏ {b} РѕўРѓђ TF.РѓЂРЄњ ╬▒ ]
        ---------------------------------------- РЅЃ
        (TF.РѓЂРЄњ ¤Ђ {a} РіЌРѓЂ idnРѓђ A)
    .pnt
      : Рѕђ {a b c d} Рєњ homРѓЂ A
        Ріб A [ TF.РѓЂРЄњ ╬▒ РѕўРѓђ TF.РѓЂРЄњ ╬▒ {((a РіЌРѓђ b) , c) , d} ]
        ----------------------------------------------- РЅЃ
        Ріб A [ idnРѓђ A РіЌРѓЂ TF.РѓЂРЄњ ╬▒
     РѕўРѓђ Ріб A [ TF.РѓЂРЄњ ╬▒ РѕўРѓђ TF.РѓЂРЄњ ╬▒ РіЌРѓЂ idnРѓђ A ] ]
