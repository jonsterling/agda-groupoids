{-# OPTIONS --without-K #-}

module Groupoid.Closed where

open import Agda.Primitive
module G where
  open import Groupoid public
    hiding (module ╬а; module TF)
  module ╬а where
    open Groupoid.╬а public
    open import Groupoid.Bifunctor public
    open import Groupoid.Presheaf public
    open import Groupoid.Profunctor public
  module TF where
    open Groupoid.TF public
    open import Groupoid.Dinatural public
import Setoid as S
open import Type as T
  using (_,_)

record t {d} ..{РёЊрхњ РёЊ╦брхњ РёЊ╦б╩░}
  (A : G.t d РёЊрхњ РёЊ╦брхњ РёЊ╦б╩░)
    : Set (РёЊрхњ Ріћ РёЊ╦брхњ Ріћ РёЊ╦б╩░) where
  no-eta-equality
  field
    РіИ : A G.╬а.:[ A ]РЄЈРѓђрхЌ A
    ­ЮЪЎ : G.obj A

  lazy : A G.╬а.РЄњРѓђрхЌ A
  lazy = РіИ G.╬а.:РЪе ­ЮЪЎ ,-РЪЕ

  dual : A G.╬а.РЄЈРѓђрхЌ A
  dual = РіИ G.╬а.:РЪе-, ­ЮЪЎ РЪЕ

  field
    susp : G.╬а.idnРѓђрхЌ T.­ЮЪЎ.* G.TF.РЅЁ lazy
    idn : G.╬а.!:[ A ]Рѓђ ­ЮЪЎ G.TF.:РЄЈРѓЂрхЌ РіИ
