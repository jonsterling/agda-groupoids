{-# OPTIONS --without-K #-}

module Groupoid.Exponential where

open import Agda.Primitive
import Groupoid.Base as G
open import Groupoid.Exponential.Boot public
import Setoid as S
import Groupoid.Transfor as TFor
open import Type as T
  using (_,_)

infixr 2 _РЄњРѓђрхЇ_

-- FIXME: setoid morphisms
_РЄњРѓђрхЇ_ : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╦брхњ РёЊРѓђ╦б╩░ РёЊРѓЂрхњ РёЊРѓЂ╦брхњ РёЊРѓЂ╦б╩░}
  Рєњ (A : G.t РёЊРѓђрхњ РёЊРѓђ╦брхњ РёЊРѓђ╦б╩░)
  Рєњ (B : G.t РёЊРѓЂрхњ РёЊРѓЂ╦брхњ РёЊРѓЂ╦б╩░)
  Рєњ G.t _ _ _
G.obj (A РЄњРѓђрхЇ B) =
  A РЄњРѓђрхЌ B
G.hom╦б (A РЄњРѓђрхЇ B) =
  ╬╗ {(F , G) Рєњ F TFor.РЄњРѓЂ╦б G}
G.idn╦брхљ (A РЄњРѓђрхЇ B) = ╬╗ {F} Рєњ
  S.╬а.! (TFor.idn F T.­ЮЪЎ.*)
S.╬а._$Рѓђ_ (G.cmp╦брхљ (A РЄњРѓђрхЇ B)) =
  TFor.cmp
TFor.comРѓѓ (S.╬а._$РѓЂ_ (G.cmp╦брхљ (A РЄњРѓђрхЇ B)) (gРЄњРѓѓ , fРЄњРѓѓ)) =
  G.cmp╦брхљ B S.╬а.$РѓЂ (TFor.comРѓѓ gРЄњРѓѓ , TFor.comРѓѓ fРЄњРѓѓ)
S.╬а._$Рѓђ_ (G.inv╦брхљ (A РЄњРѓђрхЇ B)) =
  TFor.inv
TFor.comРѓѓ (S.╬а._$РѓЂ_ (G.inv╦брхљ (A РЄњРѓђрхЇ B)) fРЄњРѓѓ) =
  G.inv╦брхљ B S.╬а.$РѓЂ TFor.comРѓѓ fРЄњРѓѓ
TFor.comРѓѓ (G.idn-lhs (A РЄњРѓђрхЇ B) ╬▒) =
  G.idn-lhs B (TFor.comРѓЂ ╬▒)
TFor.comРѓѓ (G.idn-rhs (A РЄњРѓђрхЇ B) ╬▒) =
  G.idn-rhs B (TFor.comРѓЂ ╬▒)
TFor.comРѓѓ (G.cmp-ass (A РЄњРѓђрхЇ B) ╬▒ ╬▓ ╬│) =
  G.cmp-ass B (TFor.comРѓЂ ╬▒) (TFor.comРѓЂ ╬▓) (TFor.comРѓЂ ╬│)
TFor.comРѓѓ (G.inv-lhs (A РЄњРѓђрхЇ B) ╬▒) =
  G.inv-lhs B (TFor.comРѓЂ ╬▒)
TFor.comРѓѓ (G.inv-rhs (A РЄњРѓђрхЇ B) ╬▒) =
  G.inv-rhs B (TFor.comРѓЂ ╬▒)
