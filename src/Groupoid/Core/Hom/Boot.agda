{-# OPTIONS --without-K #-}

module Groupoid.Core.Hom.Boot where

open import Agda.Primitive
import Groupoid.Core.Base as G
import Setoid as S
open import Type as T
  using (_,_)

infixr 1 _РЄњРѓђрхЌ_
infixr 2 _РѕўРѓђрхЌ_

record _РЄњРѓђрхЌ_
  {d} ..{РёЊРѓђрхњ РёЊРѓђ╦брхњ РёЊРѓђ╦б╩░ РёЊРѓЂрхњ РёЊРѓЂ╦брхњ РёЊРѓЂ╦б╩░}
  (A : G.t d РёЊРѓђрхњ РёЊРѓђ╦брхњ РёЊРѓђ╦б╩░)
  (B : G.t d РёЊРѓЂрхњ РёЊРѓЂ╦брхњ РёЊРѓЂ╦б╩░)
    : Set ((РёЊРѓђрхњ Ріћ РёЊРѓђ╦брхњ Ріћ РёЊРѓђ╦б╩░) Ріћ (РёЊРѓЂрхњ Ріћ РёЊРѓЂ╦брхњ Ріћ РёЊРѓЂ╦б╩░)) where
  no-eta-equality
  infixr 4 _$Рѓђ_
  infixr 4 _$РѓЂ_
  field
    _$Рѓђ_ : G.obj A T.╬а.РЄњРѓђ G.obj B
    -$РѓЂ╦б- : Рѕђ {a b} Рєњ G.hom╦б A (a , b) S.╬а.РЄњРѓђрхЌ G.hom╦б B (_$Рѓђ_ a , _$Рѓђ_ b)

  _$РѓЂ_
    : Рѕђ {a b}
    Рєњ S.obj (G.hom╦б A (a , b))
    T.╬а.РЄњРѓђ S.obj (G.hom╦б B (_$Рѓђ_ a , _$Рѓђ_ b))
  _$РѓЂ_ = ╬╗ {_ _} Рєњ S.╬а._$Рѓђ_ -$РѓЂ╦б-

  ._$Рѓѓ_
    : Рѕђ {a b} {f g : S.obj (G.hom╦б A (a , b))}
    Рєњ S.homрхЌ (G.hom╦б A (a , b)) (f , g)
    T.╬а.РЄњРѓђ S.homрхЌ (G.hom╦б B (_$Рѓђ_ a , _$Рѓђ_ b)) (-$РѓЂ╦б- S.╬а.$Рѓђ f , -$РѓЂ╦б- S.╬а.$Рѓђ g)
  _$Рѓѓ_ = ╬╗ {_ _ f g} Рєњ S.╬а._$РѓЂ_ -$РѓЂ╦б- {f} {g}

  field
    .idn
      : Рѕђ {a}
      Рєњ S.homрхЌ (G.hom╦б B (_$Рѓђ_ a , _$Рѓђ_ a))
          ( -$РѓЂ╦б- S.╬а.$Рѓђ (G.idn╦б A {a} S.╬а.$Рѓђ T.­ЮЪЎ.*)
          , G.idn╦б B {_$Рѓђ_ a} S.╬а.$Рѓђ T.­ЮЪЎ.*
          )
    .cmp
      : Рѕђ {a b c}
      Рєњ (g : S.obj (G.hom╦б A (b , c)))
      Рєњ (f : S.obj (G.hom╦б A (a , b)))
      Рєњ S.homрхЌ (G.hom╦б B (_$Рѓђ_ a , _$Рѓђ_ c))
          ( -$РѓЂ╦б- S.╬а.$Рѓђ (G.cmp╦б A S.╬а.$Рѓђ (g , f))
          , G.cmp╦б B S.╬а.$Рѓђ (-$РѓЂ╦б- S.╬а.$Рѓђ g , -$РѓЂ╦б- S.╬а.$Рѓђ f)
          )
open _РЄњРѓђрхЌ_ public

idnРѓђрхЌ
  : Рѕђ {d} ..{РёЊрхњ РёЊ╦брхњ РёЊ╦б╩░}
  Рєњ {A : G.t d РёЊрхњ РёЊ╦брхњ РёЊ╦б╩░}
  Рєњ T.­ЮЪЎ.tРЂ░ T.╬а.РЄњРѓђ (A РЄњРѓђрхЌ A)
_$Рѓђ_ (idnРѓђрхЌ T.­ЮЪЎ.*) =
  T.╬а.idn
-$РѓЂ╦б- (idnРѓђрхЌ T.­ЮЪЎ.*) =
  S.╬а.idnРѓђрхЌ _
idn (idnРѓђрхЌ {A = A} T.­ЮЪЎ.*) =
  G.idn╦б A S.╬а.$РѓЂ T.­ЮЪЎ.*
cmp (idnРѓђрхЌ {A = A} T.­ЮЪЎ.*) = ╬╗ g f Рєњ
  G.cmp╦б A S.╬а.$РѓЂ
    ( S.idnрхЌ (G.hom╦б A _) T.­ЮЪЎ.*
    , S.idnрхЌ (G.hom╦б A _) T.­ЮЪЎ.*
    )

cmpРѓђрхЌ
  : Рѕђ {d} ..{РёЊРѓђрхњ РёЊРѓђ╦брхњ РёЊРѓђ╦б╩░ РёЊРѓЂрхњ РёЊРѓЂ╦брхњ РёЊРѓЂ╦б╩░ РёЊРѓѓрхњ РёЊРѓѓ╦брхњ РёЊРѓѓ╦б╩░}
  Рєњ {A : G.t d РёЊРѓђрхњ РёЊРѓђ╦брхњ РёЊРѓђ╦б╩░}
  Рєњ {B : G.t d РёЊРѓЂрхњ РёЊРѓЂ╦брхњ РёЊРѓЂ╦б╩░}
  Рєњ {C : G.t d РёЊРѓѓрхњ РёЊРѓѓ╦брхњ РёЊРѓѓ╦б╩░}
  Рєњ (B РЄњРѓђрхЌ C) T.Рѕљ.РіЌ (A РЄњРѓђрхЌ B) T.╬а.РЄњРѓђ (A РЄњРѓђрхЌ C)
_$Рѓђ_ (cmpРѓђрхЌ (G , F)) =
  T.╬а.cmp (G $Рѓђ_ , F $Рѓђ_)
-$РѓЂ╦б- (cmpРѓђрхЌ (G , F)) =
  S.╬а.cmpРѓђрхЌ (-$РѓЂ╦б- G , -$РѓЂ╦б- F)
idn (cmpРѓђрхЌ {C = C} (G , F)) = ╬╗ {_} Рєњ
  -- FIXME (whiskering)
  S.cmpрхЌ (G.hom╦б C _)
    ( idn G
    , G $Рѓѓ idn F
    )
cmp (cmpРѓђрхЌ {C = C} (G , F)) = ╬╗ {_ _ _} _ _ Рєњ
  -- FIXME (whiskering)
  S.cmpрхЌ (G.hom╦б C _)
    ( cmp G _ _
    , G $Рѓѓ (cmp F _ _)
    )

_РѕўРѓђрхЌ_
  : Рѕђ {d} ..{РёЊРѓђрхњ РёЊРѓђ╦брхњ РёЊРѓђ╦б╩░ РёЊРѓЂрхњ РёЊРѓЂ╦брхњ РёЊРѓЂ╦б╩░ РёЊРѓѓрхњ РёЊРѓѓ╦брхњ РёЊРѓѓ╦б╩░}
  Рєњ {A : G.t d РёЊРѓђрхњ РёЊРѓђ╦брхњ РёЊРѓђ╦б╩░}
  Рєњ {B : G.t d РёЊРѓЂрхњ РёЊРѓЂ╦брхњ РёЊРѓЂ╦б╩░}
  Рєњ {C : G.t d РёЊРѓѓрхњ РёЊРѓѓ╦брхњ РёЊРѓѓ╦б╩░}
  Рєњ (B РЄњРѓђрхЌ C) T.╬а.РЄњРѓђ (A РЄњРѓђрхЌ B) T.╬а.РЄњРѓђ (A РЄњРѓђрхЌ C)
_РѕўРѓђрхЌ_ G F = cmpРѓђрхЌ (G , F)
