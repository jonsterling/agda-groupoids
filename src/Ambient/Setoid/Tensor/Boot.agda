{-# OPTIONS --without-K #-}

module Ambient.Setoid.Tensor.Boot where

open import Agda.Primitive
import Ambient.Setoid.Base as S
open import Type as T

infixr 3 _РіЌ_

_РіЌ_
  : Рѕђ {d} ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ (A : S.­ЮћіРѓЂ d РёЊРѓђрхњ РёЊРѓђ╩░)
  Рєњ (B : S.­ЮћіРѓЂ d РёЊРѓЂрхњ РёЊРѓЂ╩░)
  Рєњ S.­ЮћіРѓЂ d _ _
S.cellРѓђ (A РіЌ B) =
  S.­ЮћіРѓЂ.cellРѓђ A ├ЌРѓђ S.­ЮћіРѓЂ.cellРѓђ B
S.cellРѓЂ (A РіЌ B) =
  ╬╗ {((aРѓђ , bРѓђ) , (aРѓЂ , bРѓЂ)) Рєњ
    S.cellРѓЂ A (aРѓђ , aРѓЂ) ├ЌРѓђ S.cellРѓЂ B (bРѓђ , bРѓЂ)
  }
S.idn (A РіЌ B) =
  РЪе S.idn A ,Рѓђ S.idn B РЪЕ
S.cmp (A РіЌ B) =
  РЪе  S.cmp A РЄњРѓђ.РѕўРѓђ РЪе ¤ђРЂ░Рѓђ ├ЌРѓђ ¤ђРЂ░Рѓђ РЪЕ
  ,Рѓђ S.cmp B РЄњРѓђ.РѕўРѓђ РЪе ¤ђ┬╣Рѓђ ├ЌРѓђ ¤ђ┬╣Рѓђ РЪЕ РЪЕ
S.inv (_РіЌ_ {S.Dir.РЅц} A B) =
  _
S.inv (_РіЌ_ {S.Dir.РЅѕ} A B) =
  РЪе S.inv A ├ЌРѓђ S.inv B РЪЕ
