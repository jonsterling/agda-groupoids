{-# OPTIONS --without-K #-}

module Setoid.Exponential where

open import Agda.Primitive
import Setoid.Base as S
open import Setoid.Exponential.Boot public
import Setoid.Homotopy as Homo
open import Setoid.Tensor.Boot as Рѕљ
import Setoid.Terminal as ­ЮЪЎ
open import Type as T
  using (_,_)

infixr 2 _РЄњРѓђ╦б_
infixr 2 _РѕўРѓђ_
infixr 2 _РѕўРѓЂ_

_РЄњРѓђ╦б_ : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ (A : S.t РёЊРѓђрхњ РёЊРѓђ╩░)
  Рєњ (B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░)
  Рєњ S.t _ _
S.obj (A РЄњРѓђ╦б B) =
  A РЄњРѓђрхЌ B
S.homрхЌ (A РЄњРѓђ╦б B) =
  ╬╗ {(F , G) Рєњ F Homo.РЄњРѓЂ G}
S.idnрхЌрхљ (A РЄњРѓђ╦б B) =
  Homo.idn _
S.cmpрхЌрхљ (A РЄњРѓђ╦б B) =
  Homo.cmp
S.invрхЌрхљ (A РЄњРѓђ╦б B) =
  Homo.inv

idn
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ ­ЮЪЎ.s РЄњРѓђрхЌ (A РЄњРѓђ╦б A)
_$Рѓђ_ idn = idnрхЌрхљ
_$РѓЂ_ idn = Homo.idn _

cmp
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░} {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░} {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ (B РЄњРѓђ╦б C) Рѕљ.РіЌ (A РЄњРѓђ╦б B) РЄњРѓђрхЌ (A РЄњРѓђ╦б C)
_$Рѓђ_ cmp = cmpрхЌрхљ
_$РѓЂ_ cmp = Homo.cmp-hРѓЂ

_РѕўРѓђ_
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░} {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░} {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ (G : B РЄњРѓђрхЌ C)
  Рєњ (F : A РЄњРѓђрхЌ B)
  Рєњ (A РЄњРѓђрхЌ C)
G РѕўРѓђ F = G РѕўрхЌрхљ F

_РѕўРѓЂ_
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░} {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░} {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {F G : A РЄњРѓђрхЌ B}
  Рєњ {H K : B РЄњРѓђрхЌ C}
  Рєњ (╬▓ : H Homo.РЄњРѓЂ K)
  Рєњ (╬▒ : F Homo.РЄњРѓЂ G)
  Рєњ (H РѕўрхЌрхљ F) Homo.РЄњРѓЂ (K РѕўрхЌрхљ G)
╬▓ РѕўРѓЂ ╬▒ = cmp $РѓЂ (╬▓ , ╬▒)

! : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░} {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ S.obj A Рєњ (B РЄњРѓђрхЌ A)
_$Рѓђ_ (! a) = T.╬а.! a
_$РѓЂ_ (! {A = A} _) = T.╬а.! (S.idnрхЌрхљ A T.­ЮЪЎ.*)
