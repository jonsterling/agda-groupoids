{-# OPTIONS --without-K #-}

module Setoid.Transfor where

open import Agda.Primitive
import Setoid.Base as S
import Setoid.Exponential.Boot as ╬а
import Setoid.Path as Path
import Setoid.Terminal as ­ЮЪЎ
open import Type as T
  using (_,_)

infixr 0 _РЄњРѓЂ_

record _РЄњРѓЂ_ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  (F G : A ╬а.РЄњРѓђрхЌ B)
    : Set (РёЊРѓђрхњ Ріћ РёЊРѓЂ╩░) where
  no-eta-equality
  constructor natРѓЂ
  field
    comРѓЂ
      : Рѕђ {a}
      Рєњ S.homрхЌ B (F ╬а.$Рѓђ a , G ╬а.$Рѓђ a)
open _РЄњРѓЂ_ public

comРѓЂрхЌрхљРђ▓
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░}
  Рєњ {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {F G : A ╬а.РЄњРѓђрхЌ B}
  Рєњ Рѕђ {a} (╬▒ : F РЄњРѓЂ G) Рєњ S.homрхЌ B (F ╬а.$Рѓђ a , G ╬а.$Рѓђ a)
comРѓЂрхЌрхљРђ▓ ╬▒ = comРѓЂ ╬▒

idnрхЌрхљ
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░} {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ (F : A ╬а.РЄњРѓђрхЌ B)
  Рєњ T.­ЮЪЎ.t T.╬а.РЄњРѓђ (F РЄњРѓЂ F)
comРѓЂ (idnрхЌрхљ {B = B} F x) = S.idnрхЌрхљ B x

cmpрхЌрхљ
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░} {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {F G H : A ╬а.РЄњРѓђрхЌ B}
  Рєњ (G РЄњРѓЂ H) T.Рѕљ.РіЌ (F РЄњРѓЂ G)
  Рєњ F РЄњРѓЂ H
comРѓЂ (cmpрхЌрхљ {B = B} (╬▓ , ╬▒)) = S.cmpрхЌрхљ B (comРѓЂ ╬▓ , comРѓЂ ╬▒)

invрхЌрхљ
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░} {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░}
  Рєњ {F G : A ╬а.РЄњРѓђрхЌ B}
  Рєњ (F РЄњРѓЂ G) T.╬а.РЄњРѓђ (G РЄњРѓЂ F)
comРѓЂ (invрхЌрхљ {B = B} ╬▒) = S.invрхЌрхљ B (comРѓЂ ╬▒)

cmpрхЌрхљ-wРѓђ
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░ }
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░} {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░} {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {F G : A ╬а.РЄњРѓђрхЌ B}
  Рєњ (H╬▒ : (B ╬а.РЄњРѓђрхЌ C) T.Рѕљ.РіЌ (F РЄњРѓЂ G))
  Рєњ (T.Рѕљ.¤ђРѓђ H╬▒ ╬а.РѕўрхЌрхљ F) РЄњРѓЂ (T.Рѕљ.¤ђРѓђ H╬▒ ╬а.РѕўрхЌрхљ G)
comРѓЂ (cmpрхЌрхљ-wРѓђ (H , ╬▒)) = H ╬а.$РѓЂ comРѓЂ ╬▒

cmpрхЌрхљ-wРѓЂ
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░} {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░} {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {G H : B ╬а.РЄњРѓђрхЌ C}
  Рєњ (╬▓F : (G РЄњРѓЂ H) T.Рѕљ.РіЌ (A ╬а.РЄњРѓђрхЌ B))
  Рєњ (G ╬а.РѕўрхЌрхљ T.Рѕљ.¤ђРѓЂ ╬▓F) РЄњРѓЂ (H ╬а.РѕўрхЌрхљ T.Рѕљ.¤ђРѓЂ ╬▓F)
comРѓЂ (cmpрхЌрхљ-wРѓЂ (╬▓ , F)) = comРѓЂ ╬▓

cmpрхЌрхљ-hРѓђ
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░} {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░} {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {F G : A ╬а.РЄњРѓђрхЌ B}
  Рєњ {H K : B ╬а.РЄњРѓђрхЌ C}
  Рєњ (╬▓╬▒ : (H РЄњРѓЂ K) T.Рѕљ.РіЌ (F РЄњРѓЂ G))
  Рєњ (H ╬а.РѕўрхЌрхљ F) РЄњРѓЂ (K ╬а.РѕўрхЌрхљ G)
comРѓЂ (cmpрхЌрхљ-hРѓђ {C = C} {K = K} (╬▓ , ╬▒)) = S.cmpрхЌрхљ C (K ╬а.$РѓЂ comРѓЂ ╬▒ , comРѓЂ ╬▓)

cmpрхЌрхљ-hРѓЂ
  : Рѕђ ..{РёЊРѓђрхњ РёЊРѓђ╩░ РёЊРѓЂрхњ РёЊРѓЂ╩░ РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {A : S.t РёЊРѓђрхњ РёЊРѓђ╩░} {B : S.t РёЊРѓЂрхњ РёЊРѓЂ╩░} {C : S.t РёЊРѓѓрхњ РёЊРѓѓ╩░}
  Рєњ {F G : A ╬а.РЄњРѓђрхЌ B}
  Рєњ {H K : B ╬а.РЄњРѓђрхЌ C}
  Рєњ (╬▓╬▒ : (H РЄњРѓЂ K) T.Рѕљ.РіЌ (F РЄњРѓЂ G))
  Рєњ (H ╬а.РѕўрхЌрхљ F) РЄњРѓЂ (K ╬а.РѕўрхЌрхљ G)
comРѓЂ (cmpрхЌрхљ-hРѓЂ {C = C} {H = H} (╬▓ , ╬▒)) = S.cmpрхЌрхљ C (comРѓЂ ╬▓ , H ╬а.$РѓЂ comРѓЂ ╬▒)
