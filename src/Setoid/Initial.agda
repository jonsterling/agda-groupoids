{-# OPTIONS --without-K #-}

module Setoid.Initial where

open import Agda.Primitive
import Setoid.Base as S
import Setoid.Exponential as ╬а
open import Type as T
  using (_,_)

s : S.t lzero lzero
S.obj s = T.­ЮЪў.t
S.homрхЌ s = ╬╗ {((), _)}
S.idnрхЌрхљ s = ╬╗ {}
S.cmpрхЌрхљ s = ╬╗ {}
S.invрхЌрхљ s = ╬╗ {}

┬А : Рѕђ ..{РёЊрхњ РёЊ╩░} {A : S.t РёЊрхњ РёЊ╩░} Рєњ s ╬а.РЄњРѓђрхЌ A
╬а._$Рѓђ_ ┬А = ╬╗ ()
╬а._$РѓЂ_ ┬А = ╬╗ {}

┬г_ : Рѕђ ..{РёЊрхњ РёЊ╩░} (A : S.t РёЊрхњ РёЊ╩░) Рєњ Set (РёЊрхњ Ріћ РёЊ╩░)
┬г A = A ╬а.РЄњРѓђрхЌ s
